void ClassName::updateChecks(QTreeWidgetItem *item, int column)
{
    bool diff = false;
    if(column != 0 && column!=-1)
        return;
    if(item->childCount()!=0 && item->checkState(0)!=Qt::PartiallyChecked && column!=-1){
        Qt::CheckState checkState = item->checkState(0);
        for (int i = 0; i < item->childCount(); ++i) {
           item->child(i)->setCheckState(0, checkState);
        }
    } else if (item->childCount()==0 || column==-1) {
        if(item->parent()==0)
            return;
        for (int j = 0; j < item->parent()->childCount(); ++j) {
            if(j != item->parent()->indexOfChild(item) && item->checkState(0)!=item->parent()->child(j)->checkState(0)){
                diff = true;
            }
        }
        if(diff)
            item->parent()->setCheckState(0,Qt::PartiallyChecked);
        else
            item->parent()->setCheckState(0,item->checkState(0));
        if(item->parent()!=0)
            updateChecks(item->parent(),-1);
    }
}

#    self._locale = QLocale()
#    self._currency_unit = self._locale.currencySymbol(QLocale.CurrencyIsoCode)
#    self._piece_unit = " pc."

#def paint(self, painter, option, index):
#    column = index.column()
#    if column == TreeModel.NUMBER:
#        content = str(index.model().data(index)) + self._piece_unit
#        painter.save()
#        painter.drawText(option.rect, Qt.AlignLeft, content)
#        painter.restore()
#    elif column in (TreeModel.PLANT, TreeModel.PLANTATION, TreeModel.TENDING):
#        content = self._locale.toCurrencyString(index.model().data(index), self._currency_unit)
#        painter.save()
#        painter.drawText(option.rect, Qt.AlignRight, content)
#        painter.restore()
#    else:
#        QStyledItemDelegate.paint(self, painter, option, index)